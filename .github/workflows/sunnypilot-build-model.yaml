name: Build Model from Upstream

env:
  BUILD_DIR: "/data/github/openpilot"
  OUTPUT_DIR: ${{ github.workspace }}/output
  CI_DIR: ${{ github.workspace }}/release/ci
  UPSTREAM_REPO: "commaai/openpilot"

on:
  workflow_dispatch:
    inputs:
      upstream_branch:
        description: 'Upstream branch to build from'
        required: true
        default: 'master'
        type: string
      custom_name:
        description: 'Custom name for the model'
        required: false
        default: ''
        type: string

jobs:
  build_model:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ env.UPSTREAM_REPO }}
          ref: ${{ github.event.inputs.upstream_branch }}
          submodules: recursive

      - run: git lfs pull

      - name: Cache SCons
        uses: actions/cache@v4
        with:
          path: ${{ env.CI_DIR }}/scons_cache
          key: scons-${{ runner.os }}-${{ runner.arch }}-${{ github.ref_name }}-model-${{ github.sha }}
          restore-keys: |
            scons-${{ runner.os }}-${{ runner.arch }}-${{ github.ref_name }}-model-
            scons-${{ runner.os }}-${{ runner.arch }}-${{ github.ref_name }}-
            scons-${{ runner.os }}-${{ runner.arch }}-

      - name: Setup build environment
        run: |
          mkdir -p "${BUILD_DIR}/"
          sudo find $BUILD_DIR/ -mindepth 1 -delete
          echo "Starting build stage..."
          echo "Building from: ${{ env.UPSTREAM_REPO }} branch: ${{ github.event.inputs.upstream_branch }}"
      
      - name: Patch SConstruct to pass arbitrary cache
        run: |
          sed -i.bak 's#cache_dir =#default_cache_dir =#' ${{ github.workspace }}/SConstruct
          printf '/default_cache_dir/a\\\ncache_dir = ARGUMENTS.get("cache_dir", default_cache_dir)\n' | sed -i.bak -f - ${{ github.workspace }}/SConstruct
          cat ${{ github.workspace }}/SConstruct

      - name: Build Model
        run: |
          source /etc/profile
          export UV_PROJECT_ENVIRONMENT=${HOME}/venv
          export VIRTUAL_ENV=$UV_PROJECT_ENVIRONMENT
          scons -j$(nproc) cache_dir=${{ env.CI_DIR }}/scons_cache ${{ github.workspace }}/selfdrive/modeld

      - name: Prepare Output
        run: |
          sudo rm -rf ${OUTPUT_DIR}
          mkdir -p ${OUTPUT_DIR}
          rsync -avm \
            --include='*.dlc' \
            --include='*.thneed' \
            --include='*.pkl' \
            --include='*.onnx' \
            --exclude='*' \
            --delete-excluded \
            --chown=comma:comma \
            ./selfdrive/modeld/models/ ${OUTPUT_DIR}/

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs.custom_name != '' && format('model-{}-{}', github.event.inputs.custom_name, github.run_number) || format('model-{}-{}', github.event.inputs.upstream_branch, github.run_number) }}
          path: ${{ env.OUTPUT_DIR }}